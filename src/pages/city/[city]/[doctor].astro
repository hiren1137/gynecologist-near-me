---
import Layout from '../../../layouts/Layout.astro';
import Header from '../../../components/Header.astro';
import Footer from '../../../components/Footer.astro';
import { getDoctorBySlug, getStateBySlug, getCityBySlug } from '../../../lib/data';

// Static paths generation with limited scope to avoid build timeouts
export async function getStaticPaths() {
  // Import the optimized function for getting doctor combinations
  const { dbHelpers } = await import('../../../lib/supabase.js');
  
  try {
    // Get all doctors to ensure all profile pages are generated
    const doctors = await dbHelpers.getDoctorsWithLimit(10000); // Get all doctors
    
    if (!doctors || doctors.length === 0) {
      console.warn('No doctors found for static generation, creating fallback');
      return [];
    }
    
    console.log(`Generating ${doctors.length} doctor profile pages...`);
    
    return doctors.map((doctor) => ({
      params: { 
        city: doctor.city_slug,
        doctor: doctor.slug 
      },
      props: {
        doctorData: doctor,
        stateSlug: doctor.state?.toLowerCase()?.replace(/\s+/g, '-') || '',
        citySlug: doctor.city_slug,
        doctorSlug: doctor.slug
      }
    }));
  } catch (error) {
    console.error('Error generating doctor paths:', error);
    return [];
  }
}

// Get props from static generation
const { doctorData, stateSlug, citySlug, doctorSlug } = Astro.props;

if (!doctorData) {
  return Astro.redirect('/404');
}

// Using real data from Supabase database

// Parse image URLs (matching city pages logic)
function parseImageUrls(imageUrls) {
  if (Array.isArray(imageUrls)) {
    return imageUrls;
  }
  if (typeof imageUrls === 'string' && imageUrls) {
    return imageUrls.split(' | ').filter(url => url.trim());
  }
  return [];
}

// Extract real reviews from database
const realReviews = [];
for (let i = 1; i <= 5; i++) {
  const author = doctorData[`review_${i}_author`];
  const rating = doctorData[`review_${i}_rating`];
  const text = doctorData[`review_${i}_text`];
  const time = doctorData[`review_${i}_time`];
  
  if (author && text && rating) {
    realReviews.push({
      author: author,
      time: time || 'Recent',
      rating: parseInt(rating) || 5,
      text: text
    });
  }
}

// Generate Google Maps URL from place_id or coordinates
const locationUrl = doctorData.place_id 
  ? `https://www.google.com/maps/place/?q=place_id:${doctorData.place_id}`
  : (doctorData.latitude && doctorData.longitude 
    ? `https://www.google.com/maps/search/?api=1&query=${doctorData.latitude},${doctorData.longitude}`
    : '');

// Parse opening hours from database
function parseOpeningHours(hoursString) {
  const days = ['monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday'];
  const hours = {};
  
  if (!hoursString || hoursString === 'N/A') {
    days.forEach(day => hours[day] = '9:00 AM - 6:00 PM');
    return hours;
  }
  
  if (hoursString.includes('Open 24 hours')) {
    days.forEach(day => hours[day] = 'Open 24 hours');
    return hours;
  }
  
  // Parse the hours string
  const dayPattern = /(Monday|Tuesday|Wednesday|Thursday|Friday|Saturday|Sunday): ([^;]+)/g;
  let match;
  
  while ((match = dayPattern.exec(hoursString)) !== null) {
    const day = match[1].toLowerCase();
    const time = match[2].trim();
    hours[day] = time;
  }
  
  // Fill missing days with default hours
  days.forEach(day => {
    if (!hours[day]) {
      hours[day] = '9:00 AM - 6:00 PM';
    }
  });
  
  return hours;
}

// Transform the raw database data to match our expected format
const transformedDoctor = {
  id: doctorData.id,
  name: doctorData.name?.replace(/ - .*$/, '') || 'Unknown Doctor',
  slug: doctorData.slug,
  qualification: doctorData.name?.match(/ - (.+)$/)?.[1] || 'MBBS, MD (Obstetrics & Gynecology)',
  specialization: ['Obstetrics', 'Gynecology', 'Women\'s Health'], // Default specializations
  experience: '10+ years', // Default experience
  rating: (doctorData.rating && doctorData.rating !== 'N/A') ? parseFloat(doctorData.rating) : 4.5,
  totalReviews: (doctorData.total_ratings && doctorData.total_ratings !== 'N/A') ? parseInt(doctorData.total_ratings) : parseInt(doctorData.review_count) || realReviews.length,
  hospital: doctorData.name?.includes('Hospital') || doctorData.name?.includes('Clinic') || doctorData.name?.includes('Center') ? doctorData.name : 'Healthcare Center',
  address: doctorData.address || 'Address not available',
  city: doctorData.city || '',
  citySlug: doctorData.city_slug,
  state: doctorData.state || '',
  stateSlug: stateSlug,
  phone: (doctorData.phone && doctorData.phone !== 'N/A') ? doctorData.phone : '',
  website: (doctorData.website && doctorData.website !== 'N/A') ? doctorData.website : '',
  images: parseImageUrls(doctorData.image_urls), // Parse actual images from database
  openingHours: parseOpeningHours(doctorData.opening_hours), // Parse actual opening hours from database
  about: `${doctorData.name?.replace(/ - .*$/, '') || 'This healthcare provider'} is a highly qualified gynecologist providing comprehensive women's healthcare services. Expert care in obstetrics, gynecology, and women's health with a focus on patient comfort and advanced medical care.`,
  latitude: parseFloat(doctorData.latitude) || 0,
  longitude: parseFloat(doctorData.longitude) || 0,
  placeId: doctorData.place_id || '',
  locationUrl: locationUrl,
  reviewsData: realReviews.length > 0 ? realReviews : [{
    author: "Verified Patient",
    time: "Recent",
    rating: Math.min(5, Math.max(4, Math.floor(parseFloat(doctorData.rating) || 4.5))),
    text: `Professional healthcare provider with good medical expertise. Provides quality care for women's health needs.`
  }]
};

const doctorInfo = transformedDoctor;
const cityName = doctorInfo.city;
const stateName = doctorInfo.state;

// Helper function to format opening hours
function formatOpeningHours(hours: Record<string, string>) {
  const days = ['monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday'];
  const dayNames = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];
  
  return days.map((day, index) => ({
    day: dayNames[index],
    hours: hours[day] || '9:00 AM - 6:00 PM'
  }));
}

const openingHours = formatOpeningHours(doctorInfo.openingHours);
---

<Layout 
  title={`${doctorInfo.name} - Best Gynecologist in ${cityName}`}
  description={`Find ${doctorInfo.name}, a highly qualified gynecologist in ${cityName}, ${stateName}. Expert women's healthcare specialist with ${doctorInfo.rating}â˜… rating and ${doctorInfo.totalReviews} patient reviews. Complete contact information and clinic details.`}
  keywords={`${doctorInfo.name}, gynecologist ${cityName}, women's health ${cityName}, ${stateName}, gynecologist directory`}
  canonical={`https://gynecologistnearme.in/city/${citySlug}/${doctorInfo.slug}`}
>
  <Header />
  
  <main class="min-h-screen bg-gray-50">
    <!-- Breadcrumb -->
    <nav class="bg-white border-b border-gray-200 py-3">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <!-- Mobile-optimized breadcrumb with horizontal scroll -->
        <div class="flex items-center space-x-2 text-sm text-gray-600 overflow-x-auto pb-1">
          <a href="/" class="hover:text-pink-600 whitespace-nowrap flex-shrink-0">Home</a>
          <svg class="w-3 h-3 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"></path>
          </svg>
          <a href={`/${stateSlug}`} class="hover:text-pink-600 whitespace-nowrap flex-shrink-0 hidden sm:block">{stateName}</a>
          <svg class="w-3 h-3 flex-shrink-0 hidden sm:block" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"></path>
          </svg>
          <a href={`/city/${citySlug}`} class="hover:text-pink-600 whitespace-nowrap flex-shrink-0">{cityName}</a>
          <svg class="w-3 h-3 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"></path>
          </svg>
          <span class="text-pink-600 font-medium flex-shrink-0 max-w-[150px] truncate">{doctorInfo.name}</span>
        </div>
      </div>
    </nav>

    <!-- Doctor Profile Header -->
    <section class="bg-white shadow-sm">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6 lg:py-8">
        <div class="flex flex-col lg:flex-row lg:items-start lg:space-x-8">
          <!-- Doctor Image Section -->
          <div class="flex-shrink-0 mb-6 lg:mb-0">
            {doctorInfo.images && doctorInfo.images.length > 0 ? (
              <div class="w-32 h-32 lg:w-40 lg:h-40 rounded-xl overflow-hidden shadow-lg">
                <img 
                  src={doctorInfo.images[0]} 
                  alt={doctorInfo.name}
                  class="w-full h-full object-cover"
                  onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';"
                />
                <div class="w-full h-full bg-gradient-to-br from-pink-100 to-pink-200 flex items-center justify-center" style="display: none;">
                  <svg class="w-16 h-16 lg:w-20 lg:h-20 text-pink-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
              </svg>
            </div>
              </div>
            ) : (
              <div class="w-32 h-32 lg:w-40 lg:h-40 bg-gradient-to-br from-pink-100 to-pink-200 rounded-xl flex items-center justify-center shadow-lg">
                <svg class="w-16 h-16 lg:w-20 lg:h-20 text-pink-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
                </svg>
              </div>
            )}
          </div>

          <!-- Doctor Info -->
          <div class="flex-1">
            <div class="flex flex-col mb-6">
              <div class="flex-1">
                <h1 class="text-xl sm:text-2xl lg:text-3xl font-bold text-gray-900 mb-2">{doctorInfo.name}</h1>
                <p class="text-base sm:text-lg text-gray-600 mb-3">{doctorInfo.qualification}</p>
                
                <!-- Rating -->
                <div class="flex items-center mb-3">
                  <div class="flex items-center">
                  <svg class="w-5 h-5 text-yellow-400 fill-current" viewBox="0 0 20 20">
                    <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z"></path>
                  </svg>
                    <span class="text-lg font-semibold text-gray-900 mx-2">{doctorInfo.rating}</span>
                    <span class="text-gray-600">({doctorInfo.totalReviews} reviews)</span>
                  </div>
                </div>
                
                <!-- Location -->
                <div class="flex items-center text-gray-600 mb-4">
                  <svg class="w-5 h-5 mr-2 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path>
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>
                  </svg>
                  <span>{cityName}, {stateName}</span>
            </div>

            <!-- Specializations -->
            <div class="mb-4">
              <h3 class="text-sm font-semibold text-gray-900 mb-2">Specializations</h3>
              <div class="flex flex-wrap gap-2">
                    {doctorInfo.specialization.map((spec) => (
                  <span class="bg-pink-50 text-pink-700 px-3 py-1 rounded-full text-sm font-medium">
                    {spec}
                  </span>
                ))}
              </div>
            </div>
              </div>

            </div>
            
            <!-- Mobile-First Action Buttons -->
            <div class="mt-6 flex flex-col gap-3 sm:gap-2">
              {doctorInfo.phone && (
                <a href={`tel:${doctorInfo.phone}`} class="w-full bg-pink-600 text-white px-6 py-4 rounded-xl font-semibold hover:bg-pink-700 transition-all duration-200 flex items-center justify-center shadow-md hover:shadow-lg active:scale-95 touch-manipulation">
                  <svg class="w-5 h-5 mr-3 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"></path>
                  </svg>
                  <span class="text-base font-medium">Call Now</span>
                </a>
              )}
              
              {(doctorInfo.locationUrl || doctorInfo.latitude || doctorInfo.address) && (
                <a href={doctorInfo.locationUrl || `https://www.google.com/maps/search/?api=1&query=${encodeURIComponent(doctorInfo.address || `${doctorInfo.name}, ${doctorInfo.city}`)}`} target="_blank" rel="noopener noreferrer" class="w-full bg-blue-600 text-white px-6 py-4 rounded-xl font-semibold hover:bg-blue-700 transition-all duration-200 flex items-center justify-center shadow-md hover:shadow-lg active:scale-95 touch-manipulation">
                  <svg class="w-5 h-5 mr-3 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path>
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>
                  </svg>
                  <span class="text-base font-medium">Get Directions</span>
                </a>
              )}
              
              {doctorInfo.website && (
                <a href={doctorInfo.website.startsWith('http') ? doctorInfo.website : `https://${doctorInfo.website}`} target="_blank" rel="noopener noreferrer" class="w-full bg-green-600 text-white px-6 py-4 rounded-xl font-semibold hover:bg-green-700 transition-all duration-200 flex items-center justify-center shadow-md hover:shadow-lg active:scale-95 touch-manipulation">
                  <svg class="w-5 h-5 mr-3 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"></path>
                  </svg>
                  <span class="text-base font-medium">Visit Website</span>
                </a>
              )}
            </div>

            <!-- Quick Stats - Removed Experience -->
            <div class="grid grid-cols-1 gap-4 text-center">
              <div class="bg-gradient-to-r from-pink-50 to-pink-100 rounded-lg p-4">
                <div class="text-2xl font-bold text-pink-600">{doctorInfo.totalReviews}</div>
                <div class="text-sm text-gray-600">Total Reviews</div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>

    <!-- Main Content -->
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
          <!-- Main Content -->
        <div class="lg:col-span-2 space-y-6">
          <!-- About Section -->
          <div class="bg-white rounded-xl shadow-sm border border-gray-200 p-6">
            <h2 class="text-xl font-semibold text-gray-900 mb-4 flex items-center">
              <svg class="w-5 h-5 mr-2 text-pink-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
              </svg>
              About {doctorInfo.name}
            </h2>
            <p class="text-gray-600 leading-relaxed">{doctorInfo.about}</p>
          </div>

          <!-- Images Gallery -->
          {doctorInfo.images && doctorInfo.images.length > 1 && (
            <div class="bg-white rounded-xl shadow-sm border border-gray-200 p-6">
              <h2 class="text-xl font-semibold text-gray-900 mb-4 flex items-center">
                <svg class="w-5 h-5 mr-2 text-pink-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
                </svg>
                Gallery
              </h2>
              <div class="grid grid-cols-2 md:grid-cols-3 gap-4">
                {doctorInfo.images.slice(1).map((image, index) => (
                  <div class="aspect-square rounded-lg overflow-hidden shadow-md hover:shadow-lg transition-shadow">
                    <img 
                      src={image} 
                      alt={`${doctorInfo.name} - Image ${index + 2}`}
                      class="w-full h-full object-cover hover:scale-105 transition-transform duration-300"
                      loading="lazy"
                    />
                  </div>
                ))}
              </div>
            </div>
          )}

          <!-- Reviews Section - Dynamic reviews from database -->
          {doctorInfo.reviewsData && doctorInfo.reviewsData.length > 0 && (
            <div class="bg-white rounded-xl shadow-sm border border-gray-200 p-6">
              <h2 class="text-xl font-semibold text-gray-900 mb-6 flex items-center">
                <svg class="w-5 h-5 mr-2 text-pink-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z"></path>
                </svg>
                Patient Reviews ({doctorInfo.reviewsData.length})
              </h2>
              <div class="space-y-6">
                {doctorInfo.reviewsData.map((review, index) => (
                  <div class="p-6 bg-gray-50 rounded-lg border border-gray-200">
                    <!-- Review Header -->
                    <div class="flex items-center justify-between mb-4">
                      <div class="flex items-center space-x-3">
                        <div class="w-12 h-12 bg-gradient-to-br from-pink-100 to-pink-200 rounded-full flex items-center justify-center">
                          <span class="text-lg font-semibold text-pink-600">{review.author.charAt(0).toUpperCase()}</span>
                        </div>
                        <div>
                          <h4 class="font-semibold text-gray-900">{review.author}</h4>
                          <p class="text-sm text-gray-500">{review.time}</p>
                        </div>
                      </div>
                            <div class="flex items-center">
                              {Array.from({ length: 5 }, (_, i) => (
                          <svg class={`w-5 h-5 ${i < review.rating ? 'text-yellow-400 fill-current' : 'text-gray-300'}`} viewBox="0 0 20 20">
                                  <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z"></path>
                                </svg>
                              ))}
                        <span class="ml-2 text-sm font-medium text-gray-700">{review.rating}/5</span>
                      </div>
                    </div>
                    
                    <!-- Review Text - This is the important part! -->
                    {review.text && (
                      <div class="review-text">
                        <p class="text-gray-700 leading-relaxed">{review.text}</p>
                      </div>
                    )}
                    </div>
                  ))}
                </div>
              </div>
            )}

          <!-- FAQ Section -->
          <div class="bg-white rounded-xl shadow-sm border border-gray-200 p-6">
            <h2 class="text-xl font-semibold text-gray-900 mb-6 flex items-center">
              <svg class="w-5 h-5 mr-2 text-pink-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8.228 9c.549-1.165 2.03-2 3.772-2 2.21 0 4 1.343 4 3 0 1.4-1.278 2.575-3.006 2.907-.542.104-.994.54-.994 1.093m0 3h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
              </svg>
              Frequently Asked Questions
            </h2>
            <div class="space-y-4">
              <div class="border border-gray-200 rounded-lg">
                <div class="px-4 py-3 bg-gray-50 rounded-t-lg">
                  <h4 class="font-medium text-gray-900">What services does {doctorInfo.name} provide?</h4>
                </div>
                <div class="px-4 py-3 text-gray-600">
                  {doctorInfo.name} provides comprehensive gynecological services including routine check-ups, pregnancy care, family planning, treatment of gynecological conditions, and women's health consultations.
                </div>
              </div>
              
              <div class="border border-gray-200 rounded-lg">
                <div class="px-4 py-3 bg-gray-50 rounded-t-lg">
                  <h4 class="font-medium text-gray-900">What are the consultation hours?</h4>
                </div>
                <div class="px-4 py-3 text-gray-600">
                  Please refer to the opening hours listed in the contact information section. It's recommended to call ahead to confirm availability and book an appointment.
                </div>
              </div>
              
              <div class="border border-gray-200 rounded-lg">
                <div class="px-4 py-3 bg-gray-50 rounded-t-lg">
                  <h4 class="font-medium text-gray-900">How can I book an appointment?</h4>
                </div>
                <div class="px-4 py-3 text-gray-600">
                  You can book an appointment by calling the phone number provided above{doctorInfo.website ? ', visiting the website, or through online booking if available' : ''}. Walk-in consultations may also be available during clinic hours.
                </div>
              </div>
            </div>
          </div>
          </div>

          <!-- Sidebar -->
        <div class="lg:col-span-1 space-y-6">
            <!-- Contact Information -->
          <div class="bg-white rounded-xl shadow-sm border border-gray-200 p-6 sticky top-6">
            <h3 class="text-lg font-semibold text-gray-900 mb-4 flex items-center">
              <svg class="w-5 h-5 mr-2 text-pink-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"></path>
              </svg>
              Contact Information
            </h3>
              
              <div class="space-y-4">
                <div>
                <div class="text-sm font-medium text-gray-900 mb-1">Hospital/Clinic</div>
                <div class="text-gray-600">{doctorInfo.hospital}</div>
                </div>
                
                <div>
                  <div class="text-sm font-medium text-gray-900 mb-1">Address</div>
                <div class="text-gray-600 break-words">{doctorInfo.address}</div>
                </div>
                
              {doctorInfo.phone && (
                  <div>
                    <div class="text-sm font-medium text-gray-900 mb-1">Phone</div>
                  <a href={`tel:${doctorInfo.phone}`} class="text-pink-600 hover:text-pink-700 font-medium break-all">
                    {doctorInfo.phone}
                    </a>
                  </div>
                )}
                
              {doctorInfo.website && (
                  <div>
                    <div class="text-sm font-medium text-gray-900 mb-1">Website</div>
                  <a href={`${doctorInfo.website}?ref=https://gynecologistnearme.in/`} target="_blank" rel="noopener noreferrer" class="inline-flex items-center text-pink-600 hover:text-pink-700 font-medium text-sm">
                      <svg class="w-4 h-4 mr-1 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"></path>
                      </svg>
                      Visit Website
                    </a>
                  </div>
                )}
            </div>

            <!-- Opening Hours -->
            <div class="mt-6 pt-6 border-t border-gray-200">
              <h4 class="text-sm font-semibold text-gray-900 mb-3 flex items-center">
                <svg class="w-4 h-4 mr-2 text-pink-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                </svg>
                Opening Hours
              </h4>
              <div class="space-y-2">
                {openingHours.map(({ day, hours }) => (
                  <div class="flex justify-between items-center text-sm">
                    <span class="text-gray-600">{day}</span>
                    <span class="font-medium text-gray-900 text-right">{hours}</span>
                  </div>
                ))}
              </div>
            </div>

            <!-- Google Maps Location -->
            {(doctorInfo.latitude && doctorInfo.longitude && doctorInfo.latitude !== 0 && doctorInfo.longitude !== 0) && (
              <div class="mt-6 pt-6 border-t border-gray-200">
                <h4 class="text-sm font-semibold text-gray-900 mb-3 flex items-center">
                  <svg class="w-4 h-4 mr-2 text-pink-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path>
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>
                  </svg>
                  Location Map
                </h4>
                <div class="rounded-lg overflow-hidden shadow-md border border-gray-200">
                  <iframe
                    src={`https://maps.google.com/maps?q=${doctorInfo.latitude},${doctorInfo.longitude}&hl=en&z=15&output=embed`}
                    width="100%"
                    height="200"
                    style="border:0;"
                    allowfullscreen=""
                    loading="lazy"
                    referrerpolicy="no-referrer-when-downgrade"
                    title={`Location of ${doctorInfo.name}`}
                    class="w-full h-48 sm:h-52"
                  ></iframe>
                </div>
                <div class="mt-3">
                  <a 
                    href={`https://www.google.com/maps/dir/?api=1&destination=${doctorInfo.latitude},${doctorInfo.longitude}`}
                    target="_blank" 
                    rel="noopener noreferrer"
                    class="inline-flex items-center text-sm text-pink-600 hover:text-pink-700 font-medium"
                  >
                    <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 20l-5.447-2.724A1 1 0 013 16.382V5.618a1 1 0 011.447-.894L9 7m0 13l6-3m-6 3V7m6 10l4.553 2.276A1 1 0 0021 18.382V7.618a1 1 0 00-1.447-.894L15 4m0 13V4m0 0L9 7"></path>
                    </svg>
                    Get Directions in Google Maps
                  </a>
                </div>
              </div>
            )}
          </div>
        </div>
      </div>
    </div>
  </main>

  <Footer />
</Layout> 

<style>
  /* Ensure reviews text is never truncated */
  .review-text {
    white-space: pre-wrap !important;
    word-break: break-word !important;
    overflow-wrap: anywhere !important;
    text-overflow: unset !important;
    overflow: visible !important;
    max-width: none !important;
    width: 100% !important;
    display: block !important;
    height: auto !important;
    max-height: none !important;
  }
  
  /* Override any potential line-clamp styles */
  .review-text * {
    -webkit-line-clamp: unset !important;
    -webkit-box-orient: unset !important;
    overflow: visible !important;
    text-overflow: unset !important;
    height: auto !important;
    max-height: none !important;
  }
  
  /* Override any Tailwind CSS line-clamp utilities */
  .review-text {
    display: block !important;
    -webkit-box-orient: unset !important;
    -webkit-line-clamp: unset !important;
  }
</style> 